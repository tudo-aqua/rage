#  SPDX-License-Identifier: Apache-2.0
#
#  Copyright 2023-2023 The RAGe Authors
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  checks: write
  contents: read
  packages: read
  pull-requests: write

jobs:
  validate-gradle:
    name: "Gradle Wrapper Validation"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v1

  detekt:
    name: "Detekt Analysis"
    needs: validate-gradle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for version number generation
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: "Run Detekt"
        uses: gradle/gradle-build-action@v2
        with:
          arguments: detekt
      - name: "Attach Detekt Report"
        shell: sh
        run: cat build/reports/detekt/detekt.md >> ${GITHUB_STEP_SUMMARY}

  spotless:
    name: "Spotless Style Check"
    needs: validate-gradle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for version number generation
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: "Run Spotless"
        uses: gradle/gradle-build-action@v2
        with:
          arguments: spotlessCheck
      - name: "Apply Spotless Fixes"
        if: failure()
        uses: gradle/gradle-build-action@v2
        with:
          arguments: spotlessApply
      - name: "Attach Spotless Diff"
        if: failure()
        shell: sh
        run: >
          echo "# Spotless Changes\n\n```diff" >> ${GITHUB_STEP_SUMMARY}       
          git diff >> ${GITHUB_STEP_SUMMARY}
          echo "```" >> ${GITHUB_STEP_SUMMARY}

  junit-test:
    name: "JUnit Tests"
    needs: validate-gradle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for version number generation
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: "Run JUnit Tests"
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test
      - name: "Publish Test Results"
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always() # Must execute after failed tests
        with:
          files: "build/test-results/test/TEST-*.xml"
          comment_mode: off

  jpackage-linux:
    name: "JPackage for Linux"
    needs: validate-gradle
    runs-on: ubuntu-20.04 # run with older glibc
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for version number generation
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: "Run JPackage"
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jpackage
      - name: "Publish distribution"
        uses: actions/upload-artifact@v3
        with:
          name: distribution-linux
          path: build/jpackage/rage
          if-no-files-found: error
      - name: "Publish installers"
        uses: actions/upload-artifact@v3
        with:
          name: installer-linux
          # note deb uses underscore to separate the version!
          path: |
            build/jpackage/rage_*.deb
            build/jpackage/rage-*.rpm
          if-no-files-found: error

  jpackage-macos:
    name: "JPackage for Mac OS"
    needs: validate-gradle
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for version number generation
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: "Run JPackage"
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jpackage
      - name: "Publish distribution"
        uses: actions/upload-artifact@v3
        with:
          name: distribution-macos
          path: build/jpackage/rage.app
          if-no-files-found: error
      - name: "Publish installers"
        uses: actions/upload-artifact@v3
        with:
          name: installer-macos
          path: |
            build/jpackage/rage-*.dmg
            build/jpackage/rage-*.pkg
          if-no-files-found: error

  jpackage-windows:
    name: "JPackage for Windows"
    needs: validate-gradle
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for version number generation
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: "Run JPackage"
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jpackage
      - name: "Publish distribution"
        uses: actions/upload-artifact@v3
        with:
          name: distribution-windows
          path: build/jpackage/rage
          if-no-files-found: error
      - name: "Publish installers"
        uses: actions/upload-artifact@v3
        with:
          name: installer-windows
          path: |
            build/jpackage/rage-*.exe
            build/jpackage/rage-*.msi
          if-no-files-found: error
